GEMINI_API_KEY="YOUR_GEMINI_API_KEY_HERE"
DATABASE_URL="postgresql://user:password@localhost:5432/snacksinyc"
# Generate a Fernet key using: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY="YOUR_FERNET_ENCRYPTION_KEY_HERE"

# --- Google OAuth Settings ---
# The primary method for Google OAuth in this application is to use a client_secret.json file.
# Download client_secret.json from Google Cloud Console (APIs & Services > Credentials > Your OAuth 2.0 Client ID)
# and place it in this 'backend' directory. This file contains all necessary client details.

# The GOOGLE_CLIENT_ID is found within client_secret.json (e.g., "web.client_id").
# It's used by the backend for ID token verification audience check.
GOOGLE_CLIENT_ID="YOUR_GOOGLE_CLIENT_ID_FROM_GCP_CONSOLE_OR_CLIENT_SECRET_JSON"

# The GOOGLE_CLIENT_SECRET is also found within client_secret.json (e.g., "web.client_secret").
# While the current application's OAuth flow (using Flow.from_client_secrets_file) relies on client_secret.json directly,
# listing GOOGLE_CLIENT_SECRET here is for completeness or for alternative OAuth flows that might require direct env var usage.
# Keep this secret and client_secret.json secure.
GOOGLE_CLIENT_SECRET="YOUR_GOOGLE_CLIENT_SECRET_FROM_GCP_CONSOLE_OR_CLIENT_SECRET_JSON"

# The GOOGLE_REDIRECT_URI must be EXACTLY the same as one of the "Authorized redirect URIs"
# configured for your OAuth 2.0 client in the Google Cloud Console.
# For the 'auth-code' flow initiated by the frontend:
# - If your frontend is served at http://localhost:5173 and this is the URI registered in GCP, use that.
# - The @react-oauth/google library typically handles the redirect URI implicitly based on the current page or a registered one.
# - The backend's Flow object uses this URI to validate the token exchange request.
# Ensure this URI matches what's in your Google Cloud Console setup.
# Example: "http://localhost:5173" (if that's your app's origin registered as a redirect URI)
# or "http://localhost:5173/your-callback-path" (if you have a specific callback path registered)
GOOGLE_REDIRECT_URI="YOUR_REGISTERED_REDIRECT_URI_FROM_GOOGLE_CLOUD_CONSOLE"

# Note on client_secret.json:
# Ensure this file is present in the 'backend' directory for the OAuth flow to work.
# It is the most secure way to provide client credentials for this type of application.

# --- JWT Settings ---
# Generate a strong secret key, e.g., using: openssl rand -hex 32
JWT_SECRET_KEY="YOUR_VERY_STRONG_RANDOM_SECRET_KEY_HERE"
JWT_ALGORITHM="HS256"
